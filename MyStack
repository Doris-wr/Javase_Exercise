package 栈和队列.面试题.用队列实现栈;

import java.util.LinkedList;
import java.util.Queue;
//用两个队列实现栈
public class MyStack {
    private Queue<Integer> q1;
    private Queue<Integer>q2;
    public MyStack(){
        q1=new LinkedList<>();
        q2=new LinkedList<>();
    }
    //入栈
    public void push(int x){
        q1.offer(x);
    }
    //出栈
    public int pop(){
        //将q1中size-1个元素搬移到q2中
        while (q1.size() > 1) {
            q2.offer(q1.poll());
        }
        //删除q1中的队头元素
        int ret= q1.poll();
        Queue<Integer>temp=q1;
        q1=q2;
        q2=temp;
        return ret;
    }

    //获取栈顶元素
    public int top9() {
        while (q1.size() > 1) {
            q2.offer(q1.poll());
        }
        int ret=q1.peek();
        q2.offer(q1.poll());
        Queue<Integer>temp=q1;
        q1=q2;
        q2=temp;
        return ret;
    }
}
